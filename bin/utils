#!/bin/sh
#
# utils
#
# helper functions for audit scripts
#
# * created: 2012-02-05 Kevin Chan <kefin@makedostudio.com>
# * updated: 2014-11-01 kchan

myname="${0##*/}"

########################################################################
# helper functions

verbose="${VERBOSE:-0}"
debug="${DEBUG:-0}"

error()
{
    [ "$1" ] && printf >&2 "### %s\n" "$*"
    exit 1
}

elog()
{
    if [ "$verbose" -eq 1 ]; then
        printf >&2 "%s\n" "$*"
    fi
}

log()
{
    if [ "$verbose" -eq 1 ]; then
        printf "%s\n" "$*"
    fi
}

dbug()
{
    if [ "$debug" -ne 0 ]; then
        printf >&2 "%s\n" "$*"
    fi
}

check_file()
{
    [ ! -f "$1" ] && error "$myname - cannot find file: $1"
}

check_dir()
{
    [ ! -d "$1" ] && error "$myname - cannot find directory: $1"
}

makedir()
{
    [ "$1" ] && [ ! -d "$1" ] && mkdir -p "$1"
}

check_root_user()
{
    [ $(id -u) != 0 ] && error "Script must be run by root."
}

# notify script is part of the backup-scripts package
NOTIFY="/usr/local/bin/notify"
MAIL="$(which mail)"

notify()
{
    local email="$1"
    local subject="$2"
    local msgfile="$3"
    if [ -x "$NOTIFY" ]; then
        "$NOTIFY" -s "$subject" -f "$msgfile" "$email"
    else
        cat "$msgfile" | "$MAIL" -s "$subject" "$email"
    fi
}

# create temp file

create_tmpfile()
{
    local tmpfile=$(mktemp -q "/tmp/${myname}.XXXXXX")
    [ $? -ne 0 ] && error "Can't create temp file, exiting..."
    #touch "$tmpfile"
    echo "$tmpfile"
}
